{"version":3,"sources":["components/TopAnchor.js","constants/AppTheme.js","constants/Brakpoints.js","components/navbar/NavbarElements.js","images/logo.jpg","components/navbar/index.js","components/pagination/PaginationElements.js","components/pagination/index.js","components/filter/FilterElements.js","components/filter/index.js","components/card/MapElements.js","components/card/FrontCardElements.js","components/card/BackCardElements.js","components/card/CardElements.js","hooks/useCharactersData.js","components/card/404-not-found/index.js","components/card/index.js","utilities/useEpisodeName.js","App.js","index.js"],"names":["Scroll","require","TopAnchor","name","moveToTopAnchor","animateScroll","scrollToTop","duration","delay","smooth","containerId","offset","AppTheme","background","navbar","titleColor","titleShadowColor","text","primary","secondary","card","Object","freeze","Breakpoints","desktop","tablet","phone","phoneSmall","miniPhone","NAV_HEIGHT","NavContainer","styled","nav","theme","LogoContainer","div","LogoImg","img","NavTitle","css","Navbar","src","LogoSrc","alt","onClick","PaginationContainer","PrevButton","GiPreviousButton","NextButton","GiNextButton","LastButton","BsFillSkipForwardFill","FirstButton","BsFillSkipBackwardFill","PageNumber","span","PageSeparator","Pagination","currentPage","pages","onPrevClick","onNextClick","jumpToFirst","jumpToLast","SimpleContainer","FilterText","FilterForm","form","FilterLabel","label","FilterInput","input","Button","Filter","onValueChange","onReset","defaultText","useState","value","setValue","useEffect","type","onChange","e","target","Map","Key","Value","FrontCard","CardImage","CardDetails","CardName","BackCard","Deck","CardNumber","Background","Card","useCharactersData","options","page","info","results","data","setData","a","requestLink","INVALID_PAGE","fetch","response","json","error","console","fetchData","NotFound","rickData","image","key","flex","map","item","index","CharacterCard","id","status","species","origin","lastKnownLocation","firstSeenIn","url","setName","findName","useEpisodeName","firstEpisodeUrl","App","setPage","filter","setFilter","numberOfPages","pagination","Math","max","min","cards","length","location","episode","style","justifyContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33316b20.chunk.js","sourcesContent":["const Scroll = require('react-scroll');\n\nexport function TopAnchor() {\n  return <div name='back-to-top-anchor' />;\n}\n\nexport function moveToTopAnchor() {\n  Scroll.animateScroll.scrollToTop({\n    duration: 1500,\n    delay: 100,\n    smooth: true,\n    containerId: 'back-to-top-anchor',\n    offset: 20,\n  });\n}\n","const AppTheme = {\n  background: '#131313',\n  navbar: {\n    background: '#191919',\n    titleColor: 'rgb(5,175,200)',\n    titleShadowColor: 'rgb(148,197,88)',\n  },\n  text: {\n    primary: 'rgb(158,158,158)',\n    secondary: 'rgb(245,245,245)',\n  },\n  card: {\n    background: 'rgb(60,62,68)',\n  },\n};\n\nObject.freeze(AppTheme);\nexport default AppTheme;\n","const Breakpoints = {\n  desktop: '1024px',\n  tablet: '768px',\n  phone: '680px',\n  phoneSmall: '350px',\n  miniPhone: '300px',\n};\n\nObject.freeze(Breakpoints);\nexport default Breakpoints;\n","import styled, { css } from 'styled-components';\nimport Breakpoints from '../../constants/Brakpoints';\n\nconst NAV_HEIGHT = '5rem';\n\nexport const NavContainer = styled.nav`\n  height: ${NAV_HEIGHT};\n  width: 100%;\n  position: sticky;\n  top: 0;\n  padding: 0.2rem;\n  background: ${({ theme }) => theme.navbar.background};\n  display: flex;\n  align-items: center;\n  z-index: 9999;\n`;\n\nexport const LogoContainer = styled.div`\n  height: ${NAV_HEIGHT};\n  margin: 0 0.5rem;\n\n  @media (max-width: ${Breakpoints.phone}) {\n    margin: 0;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  cursor: pointer;\n\n  &:hover {\n    border: 0.17rem solid rgb(207, 17, 43);\n    border-radius: 50%;\n  }\n`;\n\nexport const NavTitle = styled.div(\n  ({ theme }) => css`\n    color: ${theme.navbar.titleColor};\n    font-size: 2.3rem;\n    font-style: italic;\n    letter-spacing: 0.15rem;\n    font-family: 'Creepster', cursive;\n    text-shadow: 0.12rem 0.12rem ${theme.navbar.titleShadowColor};\n    max-width: 55vw;\n    text-align: center;\n\n    @media (max-width: ${Breakpoints.phone}) {\n      font-size: 1.4rem;\n    }\n  `\n);\n","export default __webpack_public_path__ + \"static/media/logo.363ab528.jpg\";","import { NavContainer, LogoContainer, LogoImg, NavTitle } from './NavbarElements';\nimport { moveToTopAnchor } from '../TopAnchor';\nimport LogoSrc from '../../images/logo.jpg';\n\nexport default function Navbar() {\n  return (\n    <>\n      <NavContainer>\n        <LogoContainer>\n          <LogoImg src={LogoSrc} alt='logo' onClick={moveToTopAnchor} />\n        </LogoContainer>\n        <NavTitle>Rick and Morty Wiki</NavTitle>\n      </NavContainer>\n    </>\n  );\n}\n","import styled, { css } from 'styled-components';\nimport Breakpoints from '../../constants/Brakpoints';\nimport { GiPreviousButton, GiNextButton } from 'react-icons/gi';\nimport { BsFillSkipBackwardFill, BsFillSkipForwardFill } from 'react-icons/bs';\n\nexport const PaginationContainer = styled.div`\n  margin-left: 1.2em;\n  font-size: 1.4em;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.navbar.titleColor};\n  font-weight: bold;\n\n  @media (max-width: ${Breakpoints.phone}) {\n    margin: 0;\n    justify-content: center;\n  }\n`;\n\nexport const PrevButton = styled(GiPreviousButton)(\n  ({ theme }) =>\n    css`\n      font-size: 0.9em;\n      color: ${theme.navbar.titleColor};\n      cursor: pointer;\n      &:hover {\n        color: ${theme.navbar.titleShadowColor};\n      }\n    `\n);\n\nexport const NextButton = styled(GiNextButton)(\n  ({ theme }) =>\n    css`\n      font-size: 0.9em;\n      color: ${theme.navbar.titleColor};\n      cursor: pointer;\n      &:hover {\n        color: ${theme.navbar.titleShadowColor};\n      }\n    `\n);\n\nexport const LastButton = styled(BsFillSkipForwardFill)(\n  ({ theme }) =>\n    css`\n      font-size: 0.9em;\n      color: ${theme.navbar.titleColor};\n      cursor: pointer;\n      margin-left: 0.3em;\n      &:hover {\n        color: ${theme.navbar.titleShadowColor};\n      }\n    `\n);\n\nexport const FirstButton = styled(BsFillSkipBackwardFill)(\n  ({ theme }) =>\n    css`\n      font-size: 0.9em;\n      color: ${theme.navbar.titleColor};\n      cursor: pointer;\n      margin-right: 0.3em;\n      &:hover {\n        color: ${theme.navbar.titleShadowColor};\n      }\n    `\n);\n\nexport const PageNumber = styled.span`\n  font-family: 'Lobster', cursive;\n  margin: 0 0.25em;\n`;\n\nexport const PageSeparator = styled.span`\n  font-family: 'Lobster', cursive;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  PageNumber,\n  PageSeparator,\n  PaginationContainer,\n  PrevButton,\n  NextButton,\n  LastButton,\n  FirstButton,\n} from './PaginationElements';\n\nexport default function Pagination({ currentPage, pages, onPrevClick, onNextClick, jumpToFirst, jumpToLast }) {\n  return (\n    <PaginationContainer>\n      <FirstButton onClick={jumpToFirst} />\n      <PrevButton onClick={onPrevClick} />\n      <PageNumber>{currentPage}</PageNumber>\n      <PageSeparator>/</PageSeparator>\n      <PageNumber>{pages}</PageNumber>\n      <NextButton onClick={onNextClick} />\n      <LastButton onClick={jumpToLast} />\n    </PaginationContainer>\n  );\n}\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  pages: PropTypes.number.isRequired,\n  onPrevClick: PropTypes.func.isRequired,\n  onNextClick: PropTypes.func.isRequired,\n  jumpToFirst: PropTypes.func.isRequired,\n  jumpToLast: PropTypes.func.isRequired,\n};\n","import styled, { css } from 'styled-components';\nimport Breakpoints from '../../constants/Brakpoints';\n\nexport const SimpleContainer = styled.div(\n  ({ theme }) => css`\n    align-items: center;\n\n    background: ${theme.navbar.background};\n    padding: 0.1rem 0 0.4rem 0;\n\n    @media (min-width: ${Breakpoints.tablet}) {\n      display: flex;\n    }\n\n    @media (max-width: ${Breakpoints.tablet}) {\n      font-size: 1.2rem;\n    }\n\n    @media (max-width: ${Breakpoints.phone}) {\n      justify-content: center;\n      text-align: center;\n      font-size: 0.8rem;\n    }\n  `\n);\n\nexport const FilterText = styled.span(\n  ({ theme }) => css`\n    color: ${theme.navbar.titleColor};\n    font-size: 1.25em;\n    font-family: 'Lobster', cursive;\n    margin: 0 0.5em 0 1em;\n  `\n);\n\nexport const FilterForm = styled.form`\n  display: inline;\n`;\n\nexport const FilterLabel = styled.label`\n  display: inline;\n`;\n\nexport const FilterInput = styled.input(\n  ({ theme }) => css`\n    color: ${theme.navbar.titleColor};\n    font-size: 1.2em;\n    font-family: 'Lobster', cursive;\n    text-align: center;\n    padding: 0.15em 0;\n    background: inherit;\n    border: 0.14em solid ${theme.navbar.titleColor};\n    border-radius: 0.4em;\n    width: 8em;\n    text-transform: capitalize;\n    display: inline;\n\n    &:focus {\n      outline: none !important;\n      color: ${theme.navbar.titleShadowColor};\n      border: 0.14em solid;\n    }\n\n    &:hover {\n      color: ${theme.navbar.titleShadowColor};\n      border: 0.14em solid;\n    }\n  `\n);\n\nexport const Button = styled.div(\n  ({ theme }) => css`\n    color: ${theme.navbar.titleColor};\n    margin: 0.2em 0 0 0.4em;\n    font-size: 1.5em;\n    text-align: center;\n    display: inline;\n\n    cursor: pointer;\n\n    &:hover {\n      color: ${theme.navbar.titleShadowColor};\n    }\n  `\n);\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaSearchengin } from 'react-icons/fa';\nimport { BiReset } from 'react-icons/bi';\nimport { Button, SimpleContainer, FilterForm, FilterInput, FilterLabel, FilterText } from './FilterElements';\n\nexport default function Filter({ onValueChange, onReset, defaultText }) {\n  const [value, setValue] = useState(defaultText);\n\n  useEffect(() => setValue(defaultText), [defaultText]);\n\n  return (\n    <SimpleContainer>\n      <FilterText>Filter: </FilterText>\n      <FilterForm>\n        <FilterLabel>\n          <FilterInput type='text' value={value} onChange={e => setValue(e.target.value)} />\n        </FilterLabel>\n      </FilterForm>\n      <Button onClick={() => onValueChange(value)}>\n        <FaSearchengin />\n      </Button>\n      <Button\n        onClick={() => {\n          setValue(defaultText);\n          onReset();\n        }}>\n        <BiReset />\n      </Button>\n    </SimpleContainer>\n  );\n}\n\nFilter.propTypes = {\n  onValueChange: PropTypes.func.isRequired,\n  defaultText: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Map = styled.div`\n  margin: 0 0.8em 0.5em 0.8em;\n  font-family: 'Lobster', cursive;\n`;\n\nexport const Key = styled.span`\n  color: ${({ theme }) => theme.text.primary};\n  font-family: inherit;\n  font-size: 1.25em;\n`;\n\nexport const Value = styled.span`\n  color: ${({ theme }) => theme.text.secondary};\n  font-family: inherit;\n  font-size: 1.1em;\n  padding-left: 0.4em;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const FrontCard = styled.div(\n  ({ theme }) => css`\n    display: flex;\n    flex-flow: column;\n    border: 0.2em solid ${theme.navbar.titleColor};\n    border-radius: 0.7em;\n    overflow: hidden;\n    background: ${theme.navbar.titleColor};\n    min-height: 26em;\n\n    transition: 250ms;\n  `\n);\n\nexport const CardImage = styled.img(\n  ({ theme }) => css`\n    width: 100%;\n    height: auto;\n\n    border-bottom: 0.22em solid ${theme.navbar.titleColor};\n  `\n);\n\nexport const CardDetails = styled.div`\n  background: ${({ theme }) => theme.card.background};\n  flex-grow: 1;\n`;\n\nexport const CardName = styled.div(\n  ({ theme }) => css`\n    text-align: center;\n    font-size: 1.6em;\n    font-family: 'Lobster', cursive;\n    color: ${theme.navbar.titleColor};\n\n    padding: 0.4em 0.2em;\n  `\n);\n","import styled from 'styled-components';\n\nexport const BackCard = styled.div`\n  position: absolute;\n  top: 9em;\n  left: 50%;\n  transform: translateX(-50%);\n\n  right: 0;\n\n  border-radius: 0.8em;\n  overflow: hidden;\n\n  opacity: 0;\n\n  min-height: 12em;\n  width: 100%;\n`;\n","import styled, { css } from 'styled-components';\nimport { Map } from './MapElements';\nimport { FrontCard } from './FrontCardElements';\nimport { BackCard } from './BackCardElements';\nimport Breakpoints from '../../constants/Brakpoints';\n\nexport const Deck = styled.div`\n  min-height: 75vh;\n  display: grid;\n  grid-template-columns: 18% 18% 18% 18%;\n  justify-content: center;\n  gap: 2rem;\n  margin: 2rem 0;\n\n  @media (max-width: ${Breakpoints.tablet}) {\n    grid-template-columns: 27% 27% 27%;\n  }\n\n  @media (max-width: ${Breakpoints.phone}) {\n    grid-template-columns: 60%;\n  }\n`;\n\nexport const CardNumber = styled.div`\n  position: absolute;\n  font-weight: bold;\n  top: 0;\n  right: 0.6em;\n  background: rgba(0, 0, 0, 0.65);\n  padding: 0.5em 0.5em 0.75em;\n  clip-path: polygon(100% 0, 100% 100%, 50% 85%, 0% 100%, 0 0);\n  font-family: 'Lobster', cursive;\n  color: ${({ theme }) => theme.text.secondary};\n  transition: transform 250ms cubic-bezier(0.21, 1, 0.81, 1);\n`;\n\nexport const Background = styled.div(\n  ({ theme }) => css`\n    position: absolute;\n    top: 2em;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: -1;\n\n    transform: scale(0.1, 0.6);\n\n    background: ${theme.navbar.background};\n    border: 0.2em solid ${theme.navbar.titleColor};\n    border-radius: 0.8em;\n    overflow: hidden;\n\n    opacity: 0;\n  `\n);\n\nexport const Card = styled.div`\n  margin: 0 auto;\n  position: relative;\n  font-size: 0.85rem;\n\n  &:hover {\n    z-index: 2000;\n  }\n\n  &:hover ${FrontCard} {\n    transform: translateY(-50%) scale(0.7);\n    z-index: 10;\n    min-height: 18em;\n\n    ${Map} {\n      display: none;\n    }\n  }\n\n  &:hover ${BackCard} {\n    transition: 250ms cubic-bezier(0.21, 1, 0.81, 1), opacity 100ms linear;\n    opacity: 1;\n  }\n\n  &:hover ${Background} {\n    transform: scale(1.2, 1);\n    transition: 250ms cubic-bezier(0.21, 1, 0.81, 1), opacity 100ms linear;\n    opacity: 1;\n\n    @media (max-width: ${Breakpoints.phone}) {\n      transform: translateY(20%) scale(1.2, 1.4);\n    }\n  }\n\n  &:hover ${CardNumber} {\n    background: ${({ theme }) => theme.navbar.titleColor};\n    transform: translate(50%, 82%);\n\n    @media (max-width: ${Breakpoints.phone}) {\n      transform: translate(50%, 80%);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { INVALID_PAGE } from '../App';\n\nexport default function useCharactersData(options = { page: 1, name: '' }) {\n  const [data, setData] = useState({ info: { pages: 0 }, results: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const requestLink =\n        options.page != INVALID_PAGE\n          ? `https://rickandmortyapi.com/api/character/?page=${options.page}`\n          : `https://rickandmortyapi.com/api/character/?name=${options.name}`;\n\n      try {\n        const response = await fetch(requestLink);\n        const json = await response.json();\n        if (json.error) setData({ info: { pages: 0 }, results: [] });\n        else setData(json);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [options.page, options.name]);\n\n  return [data.results, data.info.pages];\n}\n","import { Card, CardNumber, Background } from '../CardElements';\nimport { Map, Key, Value } from '../MapElements';\nimport { FrontCard, CardImage, CardName, CardDetails } from '../FrontCardElements';\nimport { BackCard } from '../BackCardElements';\n\nimport useCharactersData from '../../../hooks/useCharactersData';\nimport { INVALID_PAGE } from '../../../App';\n\nexport default function NotFound() {\n  const rickData = useCharactersData({ page: INVALID_PAGE, name: 'Rick' });\n\n  return (\n    <Card>\n      <CardNumber>404</CardNumber>\n      <FrontCard>\n        <CardImage src={rickData[0][0] ? rickData[0][0].image : ''} alt='Rick Sanchez' />\n        <CardDetails>\n          <CardName>~ 404 ~</CardName>\n          <Map>\n            <Key>First seen in: </Key>\n            <br />\n            <Value>The beginning o&apos; the time</Value>\n          </Map>\n        </CardDetails>\n      </FrontCard>\n\n      <Background />\n\n      <BackCard>\n        {[\n          { key: 'Morty:', value: 'Aw geez, Rick, something bad happened!', flex: true },\n          {\n            key: 'Rick:',\n            value: `Yes, obviously Morty. You're as dumb as they come. Someone tried to find something that didn't exist.`,\n            flex: true,\n          },\n          { key: 'Morty:', value: 'Aw ...', flex: true },\n        ].map((item, index) => (\n          <Map flex={item.flex} key={index}>\n            <Key>{item.key}</Key>\n            <Value>{item.value}</Value>\n          </Map>\n        ))}\n      </BackCard>\n    </Card>\n  );\n}\n\n/*const messages = (\n    <>\n      {' '}\n      {[\n        { character: '', text:  },\n        {\n          character: 'Rick',\n          text: ,\n        },\n        { character: 'Morty', text:  },\n      ].map((item, index) => (\n        <Section key={index}>\n          <Title>{item.character}:</Title>\n          <Subtitle>{item.text}</Subtitle>\n        </Section>\n      ))}\n    </>\n  ); */\n","import PropTypes from 'prop-types';\nimport useEpisodeName from '../../utilities/useEpisodeName';\n\nimport { Background, Card, CardNumber } from './CardElements';\nimport { Map, Key, Value } from './MapElements';\nimport { FrontCard, CardImage, CardName, CardDetails } from './FrontCardElements';\nimport { BackCard } from './BackCardElements';\n\nexport default function CharacterCard({\n  id,\n  name,\n  image,\n  status,\n  species,\n  origin,\n  lastKnownLocation,\n  firstEpisodeUrl,\n}) {\n  const firstSeenIn = useEpisodeName(firstEpisodeUrl);\n\n  return (\n    <Card>\n      <CardNumber>{id}</CardNumber>\n      <FrontCard>\n        <CardImage src={image} alt={name} />\n        <CardDetails>\n          <CardName>{name}</CardName>\n          <Map>\n            <Key>First seen in: </Key>\n            <br />\n            <Value>{firstSeenIn}</Value>\n          </Map>\n        </CardDetails>\n      </FrontCard>\n\n      <Background />\n\n      <BackCard>\n        {[\n          { key: 'Status:', value: status, flex: true },\n          { key: 'Species:', value: species, flex: true },\n          { key: 'First seen in:', value: firstSeenIn, flex: true },\n          { key: 'Origin:', value: origin, flex: true },\n          { key: 'Last known location:', value: lastKnownLocation },\n        ].map((item, index) => (\n          <Map flex={item.flex} key={index}>\n            <Key>{item.key}</Key>\n            <Value>{item.value}</Value>\n          </Map>\n        ))}\n      </BackCard>\n    </Card>\n  );\n}\n\nCharacterCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  origin: PropTypes.string.isRequired,\n  lastKnownLocation: PropTypes.string.isRequired,\n  firstEpisodeUrl: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useEpisodeName(url) {\n  const [name, setName] = useState('loading...');\n\n  const findName = async () => {\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n      setName(json.name);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  findName();\n\n  return name;\n}\n","import { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { moveToTopAnchor, TopAnchor } from './components/TopAnchor';\nimport AppTheme from './constants/AppTheme';\n\nimport Navbar from './components/navbar';\nimport Pagination from './components/pagination';\n\nimport { SimpleContainer } from './components/filter/FilterElements';\nimport Filter from './components/filter';\n\nimport { Deck } from './components/card/CardElements';\nimport NotFound from './components/card/404-not-found';\nimport useCharactersData from './hooks/useCharactersData';\nimport CharacterCard from './components/card';\n\nexport const INVALID_PAGE = -1;\n\nexport default function App() {\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState('');\n  const [data, numberOfPages] = useCharactersData({ page: page, name: filter });\n\n  const handleFilterChange = value => {\n    setPage(INVALID_PAGE);\n    setFilter(value);\n  };\n\n  const handleFilterReset = () => {\n    setPage(1);\n    setFilter('');\n  };\n\n  const pagination = (\n    <>\n      {page != -1 && (\n        <Pagination\n          currentPage={page}\n          pages={numberOfPages}\n          onPrevClick={() => {\n            setPage(Math.max(1, page - 1));\n            moveToTopAnchor();\n          }}\n          onNextClick={() => {\n            setPage(Math.min(numberOfPages, page + 1));\n            moveToTopAnchor();\n          }}\n          jumpToFirst={() => {\n            setPage(1);\n            moveToTopAnchor();\n          }}\n          jumpToLast={() => {\n            setPage(numberOfPages);\n            moveToTopAnchor();\n          }}\n        />\n      )}\n    </>\n  );\n\n  const cards =\n    data.length == 0 ? (\n      <NotFound />\n    ) : (\n      <>\n        {data.map((item, index) => (\n          <CharacterCard\n            key={index}\n            id={item.id}\n            image={item.image || ''}\n            name={item.name || ''}\n            status={item.status || ''}\n            species={item.species || ''}\n            origin={item.origin ? item.origin.name : ''}\n            lastKnownLocation={item.location ? item.location.name : ''}\n            firstEpisodeUrl={item.episode[0]}\n          />\n        ))}\n      </>\n    );\n\n  return (\n    <>\n      <ThemeProvider theme={AppTheme}>\n        <Navbar />\n        <SimpleContainer>\n          <Filter onValueChange={handleFilterChange} onReset={handleFilterReset} defaultText={'Character'} />\n          {pagination}\n        </SimpleContainer>\n        <TopAnchor />\n\n        <Deck>{cards}</Deck>\n\n        <SimpleContainer style={{ justifyContent: 'center' }}>{pagination}</SimpleContainer>\n      </ThemeProvider>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}