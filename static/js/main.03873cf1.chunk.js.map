{"version":3,"sources":["Brakpoints.js","components/navbar/NavbarElements.js","images/logo.jpg","components/navbar/index.js","theme.js","components/CardElements.js","components/category/index.js","components/category/useData.js","App.js","index.js"],"names":["Breakpoints","desktop","tablet","phone","miniPhone","Object","freeze","NAV_HEIGHT","NavContainer","styled","nav","theme","navbar","background","LogoContainer","div","LogoImg","img","NavTitle","css","titleColor","titleShadowColor","NavMenuToggleButton","FaBars","CategoryLinksContainer","active","CategoryLink","Navbar","useState","menuOpen","setMenuOpen","onClick","src","LogoSrc","alt","map","item","index","text","primary","secondary","card","Deck","Card","CardImageWrapper","CardImage","VerticalDivider","CardDetails","CardName","Section","Lobster","span","Title","Subtitle","Category","data","type","results","setData","useEffect","fetch","then","response","json","useData","console","log","image","name","status","species","location","App","reqType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03873cf1.chunk.js","sourcesContent":["const Breakpoints = {\n  desktop: '1024px',\n  tablet: '768px',\n  phone: '680px',\n  miniPhone: '300px',\n};\n\nObject.freeze(Breakpoints);\nexport default Breakpoints;\n","import styled, { css } from 'styled-components';\nimport Breakpoints from '../../Brakpoints';\nimport { FaBars } from 'react-icons/fa';\n\nconst NAV_HEIGHT = '5rem';\n\nexport const NavContainer = styled.nav`\n  height: ${NAV_HEIGHT};\n  width: 100%;\n  position: sticky;\n  top: 0;\n  padding: 0.2rem;\n  background: ${({ theme }) => theme.navbar.background};\n  display: flex;\n  align-items: center;\n`;\n\nexport const LogoContainer = styled.div`\n  height: ${NAV_HEIGHT};\n  margin: 0 0.5rem;\n\n  @media (max-width: ${Breakpoints.phone}) {\n    margin: 0;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  cursor: pointer;\n`;\n\nexport const NavTitle = styled.div(\n  ({ theme }) => css`\n    color: ${theme.navbar.titleColor};\n    font-size: 2.3rem;\n    font-style: italic;\n    letter-spacing: 0.15rem;\n    font-family: 'Creepster', cursive;\n    text-shadow: 0.12rem 0.12rem ${theme.navbar.titleShadowColor};\n    cursor: pointer;\n    max-width: 55vw;\n    text-align: center;\n\n    @media (max-width: ${Breakpoints.phone}) {\n      font-size: 1.4rem;\n    }\n  `\n);\n\nexport const NavMenuToggleButton = styled(FaBars)`\n  color: ${({ theme }) => theme.navbar.titleColor};\n  position: fixed;\n  z-index: 100;\n  top: -1000px;\n\n  cursor: pointer;\n  &:hover {\n    color: ${({ theme }) => theme.navbar.titleShadowColor};\n  }\n\n  @media (max-width: ${Breakpoints.tablet}) {\n    top: 1rem;\n    right: 1rem;\n    font-size: 2rem;\n  }\n\n  @media (max-width: ${Breakpoints.phone}) {\n    top: 0.8rem;\n    right: 0.7rem;\n    font-size: 1.4rem;\n  }\n`;\n\nexport const CategoryLinksContainer = styled.div(\n  ({ theme, active }) => css`\n    margin-left: 2rem;\n    display: flex;\n    transition: all 0.5s ease;\n\n    @media (max-width: ${Breakpoints.tablet}) {\n      position: absolute;\n      top: -1000px;\n\n      ${active &&\n      css`\n        top: 0;\n        transition: all 0.5s ease;\n      `}\n\n      margin: 0;\n      display: grid;\n      grid-template-columns: auto;\n      text-align: center;\n      height: 25vh;\n      width: 100%;\n      background: ${theme.navbar.background};\n      border-bottom: 3px solid ${theme.navbar.titleShadowColor};\n      border-radius: 0.8rem;\n      padding-top: 2rem;\n\n      z-index: 200;\n    }\n  `\n);\n\nexport const CategoryLink = styled.div(\n  ({ theme }) => css`\n    margin-right: 1rem;\n    color: ${theme.navbar.titleColor};\n    text-shadow: 0.12rem 0.12rem ${theme.navbar.titleShadowColor};\n\n    font-size: 1.5rem;\n    font-style: italic;\n    letter-spacing: 0.15rem;\n    font-family: 'Creepster', cursive;\n\n    cursor: pointer;\n\n    display: block;\n\n    &:hover {\n      color: ${theme.navbar.titleShadowColor};\n      text-shadow: 0.12rem 0.12rem ${theme.navbar.titleColor};\n    }\n  `\n);\n","export default __webpack_public_path__ + \"static/media/logo.363ab528.jpg\";","import React, { useState } from 'react';\nimport {\n  NavContainer,\n  LogoContainer,\n  LogoImg,\n  NavTitle,\n  CategoryLink,\n  CategoryLinksContainer,\n  NavMenuToggleButton,\n} from './NavbarElements';\nimport LogoSrc from '../../images/logo.jpg';\n\nexport default function Navbar() {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  return (\n    <>\n      <NavMenuToggleButton onClick={() => setMenuOpen(!menuOpen)} />\n      <NavContainer>\n        <LogoContainer>\n          <LogoImg src={LogoSrc} alt='logo' />\n        </LogoContainer>\n        <NavTitle>Rick and Morty Wiki</NavTitle>\n        <CategoryLinksContainer active={menuOpen}>\n          {['Characters', 'Locations'].map((item, index) => (\n            <CategoryLink\n              key={index}\n              onClick={() => {\n                setMenuOpen(false);\n              }}>\n              {item}\n            </CategoryLink>\n          ))}\n        </CategoryLinksContainer>\n      </NavContainer>\n    </>\n  );\n}\n","const theme = {\n  background: '#131313',\n  navbar: {\n    background: '#191919',\n    titleColor: 'rgb(5,175,200)',\n    titleShadowColor: 'rgb(148,197,88)',\n  },\n  text: {\n    primary: 'rgb(158,158,158)',\n    secondary: 'rgb(245,245,245)',\n  },\n  card: {\n    background: 'rgb(60,62,68)',\n  },\n};\n\nObject.freeze(theme);\nexport default theme;\n","import styled, { css } from 'styled-components';\nimport Breakpoints from '../Brakpoints';\n\nexport const Deck = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  gap: 1.5rem;\n  min-height: 83vh;\n  padding: 1rem 3rem 1rem 2rem;\n\n  @media (max-width: ${Breakpoints.tablet}) {\n    grid-template-columns: 100%;\n    padding: 1rem 0.5rem;\n  }\n`;\n\nexport const Card = styled.div`\n  background: ${({ theme }) => theme.card.background};\n  border: 0.2rem solid ${({ theme }) => theme.navbar.titleColor};\n  box-shadow: 0.3rem 0.3rem ${({ theme }) => theme.navbar.titleShadowColor};\n  border-radius: 1rem;\n  overflow: hidden;\n  display: flex;\n\n  @media (max-width: ${Breakpoints.tablet}) {\n    box-shadow: none;\n  }\n`;\n\nexport const CardImageWrapper = styled.div`\n  width: 40%;\n\n  @media (max-width: ${Breakpoints.phone}) {\n  }\n`;\n\nexport const CardImage = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const VerticalDivider = styled.div`\n  border: 1px solid ${({ theme }) => theme.navbar.titleColor};\n  height: 100%;\n`;\n\nexport const CardDetails = styled.div`\n  width: 50%;\n  margin: 0 auto;\n  padding: 0.7rem 0;\n\n  @media (max-width: ${Breakpoints.phone}) {\n    font-size: 0.6rem;\n  }\n`;\n\nexport const CardName = styled.div(\n  ({ theme }) => css`\n    color: ${theme.navbar.titleColor};\n    font-size: 2.3em;\n    font-style: italic;\n    letter-spacing: 0.12em;\n    font-family: 'Creepster', cursive;\n    text-shadow: 0.07em 0.07em ${theme.navbar.titleShadowColor};\n  `\n);\n\nexport const Section = styled.div`\n  margin-top: 1em;\n`;\n\nconst Lobster = styled.span`\n  font-family: 'Lobster', cursive;\n`;\n\nexport const Title = styled(Lobster)`\n  color: ${({ theme }) => theme.text.primary};\n  font-size: 1.4em;\n`;\n\nexport const Subtitle = styled(Lobster)`\n  color: ${({ theme }) => theme.text.secondary};\n  font-size: 1.2em;\n`;\n","import React from 'react';\nimport {\n  Deck,\n  Card,\n  CardImage,\n  CardImageWrapper,\n  VerticalDivider,\n  CardDetails,\n  CardName,\n  Section,\n  Subtitle,\n  Title,\n} from '../CardElements';\nimport useData from './useData';\n\nexport default function Category() {\n  const data = useData('character');\n  console.log(data);\n  return (\n    <Deck>\n      {data.map((item, index) => (\n        <Card key={index}>\n          <CardImageWrapper>\n            <CardImage src={item.image} alt={item.name} />\n          </CardImageWrapper>\n          <VerticalDivider />\n          <CardDetails>\n            <CardName>{item.name}</CardName>\n\n            <Section>\n              <Title>Status: </Title>\n              <Subtitle>{item.status}</Subtitle>\n            </Section>\n\n            <Section>\n              <Title>Species: </Title>\n              <Subtitle>{item.species}</Subtitle>\n            </Section>\n\n            <Section>\n              <Title>Last known location: </Title>\n              <br />\n              <Subtitle>{item.location.name}</Subtitle>\n            </Section>\n          </CardDetails>\n        </Card>\n      ))}\n    </Deck>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useData(type) {\n  const [data, setData] = useState({ results: [] });\n\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/${type}`)\n      .then(response => response.json())\n      .then(data => setData(data));\n  }, [type]);\n\n  return data.results;\n}\n","import { ThemeProvider } from 'styled-components';\nimport Navbar from './components/navbar';\nimport theme from './theme';\nimport Category from './components/category';\n\nexport default function App() {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Navbar />\n        <Category reqType='character'></Category>\n      </ThemeProvider>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}